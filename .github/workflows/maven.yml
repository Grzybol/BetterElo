name: Java CI with Maven, Auto-Versioning, and Release

on:
  push:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B build-helper:parse-version versions:set versions:commit package --file pom.xml
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: minecraft-plugin
          path: target/*.jar

  prepare-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: minecraft-plugin
      - name: Extract version and artifact name
        run: |
          JAR_NAME=$(ls *.jar)
          ARTIFACT_NAME=$(basename $JAR_NAME)
          VERSION=$(echo $ARTIFACT_NAME | grep -oP '(?<=-)\d+\.\d+\.\d+(?=-SNAPSHOT)')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=$ARTIFACT_NAME" >> $GITHUB_ENV
          echo "Extracted VERSION: $VERSION"
          echo "Extracted ARTIFACT_NAME: $ARTIFACT_NAME"

  create-tag:
    needs: prepare-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Create and Push Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${{ env.VERSION }}
          git push https://x-access-token:${{ secrets.BE_ACCESS_TOKEN }}@github.com/${{ github.repository }} ${{ env.VERSION }}
      - name: Export tag name for next job
        run: |
          echo "tag_name=${{ env.VERSION }}" >> $GITHUB_ENV

  create-release:
    needs: create-tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          tag_name: ${{ env.tag_name }} # Używamy zmiennej środowiskowej zdefiniowanej w poprzednim kroku
          files: target/*.jar
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
